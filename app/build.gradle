apply plugin: 'com.android.application'

android {

    flavorDimensions "one"

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    lintOptions {
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "net.programmierecke.radiodroid2"
        minSdkVersion 15
        targetSdkVersion 28

        versionCode 89
        versionName "0.79"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        // Define your application name here.
        // It must neither be present in /res/values/strings.xml
        // nor in /res/values/string_no_translate.xml
        resValue 'string', 'app_name_untranslated', 'RadioDroid'
    }

    sourceSets {
        // Store flags in subfolder to not pollute drawables
        // https://antonioleiva.com/android-multiple-resource-folders/
        main.res.srcDirs += ["src/main/res/drawable/flags"]
    }

    buildTypes.each {
        it.buildConfigField 'String', 'LastFMAPIKey', '"' + getLastFMApiKey() + '"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            lintOptions {
                disable 'MissingTranslation'
            }
        }
    }
    productFlavors {
        play {
            dimension "one"
        }
        free {
            dimension "one"
        }
    }
}

def getLastFMApiKey() {
    def value = project.getProperties().get('lastFMApiKey')
    return value != null ? value : ''
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Keep OkHttp 3.12.X to support Android 4.X, see https://developer.squareup.com/blog/okhttp-3-13-requires-android-5
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:3.12.8'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.9.6'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.9.6'
    implementation 'com.google.android.exoplayer:exoplayer:2.9.6'
    implementation "com.mikepenz:iconics-core:4.0.0"
    implementation 'com.mikepenz:google-material-typeface:3.0.1.4.original-kotlin@aar'
    implementation 'com.mikepenz:community-material-typeface:3.5.95.1-kotlin@aar'
    implementation 'com.github.rustamg:file-dialogs:1.0'
    implementation 'info.debatty:java-string-similarity:1.2.1'
    implementation 'me.xdrop:fuzzywuzzy:1.2.0'

    implementation "androidx.room:room-runtime:2.2.2"
    annotationProcessor "androidx.room:room-compiler:2.2.2"

    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.1.0"

    implementation "androidx.paging:paging-runtime:2.1.0"

    implementation 'com.github.ByteHamster:SearchPreference:v1.2.5'
    playImplementation 'com.google.android.gms:play-services-cast:18.0.0'
    playImplementation 'com.google.android.gms:play-services-cast-framework:18.0.0'
}


// https://stackoverflow.com/questions/24649240/build-release-apk-with-customize-name-format-in-android-studio
// https://stackoverflow.com/questions/32092665/resolve-application-label-for-each-build-type/32220436#32220436
// https://stackoverflow.com/questions/18332474/how-to-set-versionname-in-apk-filename-using-gradle

// Gradle 3.0
// https://stackoverflow.com/questions/44800028/change-apk-filename-in-gradle-failed-with-gradle3-0-0-alpha4

android.applicationVariants.all { variant ->

    variant.outputs.all { output ->

        // get app_name field from defaultConfig
        def appName = variant.mergedFlavor.resValues.get('app_name_untranslated').getValue()
        appName = "${appName}"

        // concat new App name with each flavor's name

        variant.productFlavors.each { flavor ->
            appName += "-${flavor.name}"
        }

        // optionally add buildType name
        appName += "-${variant.buildType.name}"

        // your requirement: if buildType == debug, add DEV to App name
        if (variant.buildType.name == "debug") {
            appName += "-DEV"
        }

        // if you want, you can set a new resValue
        // variant.resValue 'string', 'app_name', appName

        /*
         * Gets the version name from the latest Git tag
         */

        def gitHash = { ->
            def stdout = new ByteArrayOutputStream()
            try {
                exec {
                    commandLine 'git', 'rev-parse', '--short', 'HEAD'
                    standardOutput = stdout
                }
                return stdout.toString().trim()
            } catch (Exception ignored) {
                return "No commit hash"
            }
        }

        resValue 'string', 'GIT_HASH', gitHash()

        def getBuildDate = {
            new Date().format('yyyy-MM-dd HH:mm:ss')
        }

        resValue 'string', 'BUILD_DATE', getBuildDate()

        def finalName = appName

        if (!versionName.isEmpty()) {
            finalName += "-" + versionName
        }

        finalName += "-" + gitHash() + ".apk"
        // outputFileName = "${variant.name}-${variant.versionName}.apk"
        outputFileName = finalName
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
            }
        }
    }
}